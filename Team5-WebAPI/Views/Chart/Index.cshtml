
@{
    ViewBag.Title = "Index";
}
@{
    string labels = ViewBag.Labels;

    string label1 = ViewBag.Label1;
    string data1 = ViewBag.data1;

    string label2 = ViewBag.Label2;
    string data2 = ViewBag.data2;

    List<Team5_WebAPI.Models.Chart_VO> ac = ViewBag.list;
    int count = 1;

}
<div class="col-xs-12">
    <div class="callout callout-info">
        <h4>Tip!</h4>

        <p>
            Add the layout-top-nav class to the body tag to get this layout. This feature can also be used with a
            sidebar! So use this class if you want to remove the custom dropdown menus from the navbar and use regular
            links instead.
        </p>
    </div>
</div>
<div class="col-xs-12">
    <div class="box box-default">
        <div class="box-body">
            <div class="col-md-6">
                <!-- AREA CHART -->


                <h3 class="box-title">월간 주문량</h3>

                <div class="box-body">
                    <div class="chart">
                        <canvas id="barChart" style="height:250px"></canvas> <!-- height 바꾸면 크기 조정, id 값= 유일하게-->
                    </div>
                </div>
                <!-- /.box-body -->

            </div>
            <div class="col-md-6">

                <div class="box-header">
                    <h3 class="box-title">Bordered Table</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table class="table table-bordered">
                        <tbody>
                            <tr>
                                <th style="width: 10px">#</th>
                                <th>날짜</th>
                                <th>고객사</th>
                                <th>주문량</th>
                                <th>판매량</th>
                            </tr>
                            @foreach (var a in ac)
                            {
                            <tr>
                                <td>@count</td>
                                <td>@a.MM 월</td>
                                <td>@a.COM_Code</td>
                                <td>
                                    <span class="badge bg-green">@a.Qty</span>
                                </td>
                                <td><span class="badge bg-red">@a.Sales_shipQty</span></td>
                            </tr>
                                count++;
                            }
                        </tbody>
                    </table>
                </div>
                <!-- /.box-body -->
               
            </div>
        </div>
    </div>
</div>

<div class="col-xs-12">
    <div class="callout callout-info">
        <h4>Tip!</h4>

        <p>
            Add the layout-top-nav class to the body tag to get this layout. This feature can also be used with a
            sidebar! So use this class if you want to remove the custom dropdown menus from the navbar and use regular
            links instead.
        </p>
    </div>
</div>

<!-- /.box -->
<!-- DONUT CHART -->
<!-- /.col (LEFT) -->
<div class="col-xs-12">
    <div class="box box-default">
        <div class="box-body">
            <div class="col-md-6">
                <h3 class="box-title">Bar Chart</h3>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="areaChart" style="height:230px"></canvas>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <div class="col-md-6">

                <div class="box-header">
                    <h3 class="box-title">Bordered Table</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table class="table table-bordered">
                        <tbody>
                            <tr>
                                <th style="width: 10px">#</th>
                                <th>Task</th>
                                <th>Progress</th>
                                <th style="width: 40px">Label</th>
                            </tr>
                            <tr>
                                <td>1.</td>
                                <td>Update software</td>
                                <td>
                                    <div class="progress progress-xs">
                                        <div class="progress-bar progress-bar-danger" style="width: 55%"></div>
                                    </div>
                                </td>
                                <td><span class="badge bg-red">55%</span></td>
                            </tr>
                            <tr>
                                <td>2.</td>
                                <td>Clean database</td>
                                <td>
                                    <div class="progress progress-xs">
                                        <div class="progress-bar progress-bar-yellow" style="width: 70%"></div>
                                    </div>
                                </td>
                                <td><span class="badge bg-yellow">70%</span></td>
                            </tr>
                            <tr>
                                <td>3.</td>
                                <td>Cron job running</td>
                                <td>
                                    <div class="progress progress-xs progress-striped active">
                                        <div class="progress-bar progress-bar-primary" style="width: 30%"></div>
                                    </div>
                                </td>
                                <td><span class="badge bg-light-blue">30%</span></td>
                            </tr>
                            <tr>
                                <td>4.</td>
                                <td>Fix and squish bugs</td>
                                <td>
                                    <div class="progress progress-xs progress-striped active">
                                        <div class="progress-bar progress-bar-success" style="width: 90%"></div>
                                    </div>
                                </td>
                                <td><span class="badge bg-green">90%</span></td>
                            </tr>
                            <tr>
                                <td>4.</td>
                                <td>Fix and squish bugs</td>
                                <td>
                                    <div class="progress progress-xs progress-striped active">
                                        <div class="progress-bar progress-bar-success" style="width: 90%"></div>
                                    </div>
                                </td>
                                <td><span class="badge bg-green">90%</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <!-- /.box-body -->
         



            <!-- /.box -->
        </div>
    </div>
</div>

<!-- /.col (RIGHT) -->
<!-- /.row -->



@section Scripts {
    <script>
       $(document).ready(function () {
            /* ChartJS
             * -------
             * Here we will create a few charts using ChartJS
             */

            //--------------
            //- AREA CHART -
            //--------------

            // Get context with jQuery - using jQuery's .get() method.
            var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
            // This will get the first returned node in the jQuery collection.
            var areaChart = new Chart(areaChartCanvas)

                var temp = "@labels";
                var arrTemp = temp.split(',');

         var areaChartData = {
                    labels: arrTemp,
            datasets: [
                        {
                            label: '@label1',
                            fillColor: 'rgba(0, 166, 90)',
                            strokeColor: 'rgba(0, 166, 90)',
                            pointColor: 'rgba(0, 166, 90)',
                            pointStrokeColor: '#00a65a',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(220,220,220,1)',
                            data: @data1
                        },
                        {
                            label: '@label1',
                            fillColor: 'rgba(221, 75, 57)',
                            strokeColor: 'rgba(221, 75, 57)',
                            pointColor: 'rgba(221, 75, 57)',
                            pointStrokeColor: '#dd4b39',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(220,220,220,1)',
                            data: @data2
                         }
             ]
          };

              var areaChartOptions = {
                //Boolean - If we should show the scale at all
                showScale: true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: false,
                //String - Colour of the grid lines
                scaleGridLineColor: 'rgba(0,0,0,.05)',
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                //Boolean - Whether the line is curved between points
                bezierCurve: true,
                //Number - Tension of the bezier curve between points
                bezierCurveTension: 0.3,
                //Boolean - Whether to show a dot for each point
                pointDot: false,
                //Number - Radius of each point dot in pixels
                pointDotRadius: 4,
                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth: 1,
                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius: 20,
                //Boolean - Whether to show a stroke for datasets
                datasetStroke: true,
                //Number - Pixel width of dataset stroke
                datasetStrokeWidth: 2,
                //Boolean - Whether to fill the dataset with a color
                datasetFill: true,
                //String - A legend template
                legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true
            }

            //Create the line chart
            areaChart.Line(areaChartData, areaChartOptions)


            var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
            var lineChart = new Chart(lineChartCanvas)
            var lineChartOptions = areaChartOptions
            lineChartOptions.datasetFill = false
            lineChart.Line(areaChartData, lineChartOptions)


            //-------------
            //- BAR CHART -
            //-------------
            var barChartCanvas = $('#barChart').get(0).getContext('2d')
            var barChart = new Chart(barChartCanvas)
            var barChartData = areaChartData
            //barChartData.datasets[1].fillColor = '#00a62a'
            //barChartData.datasets[1].strokeColor = '#00a61a'
            //barChartData.datasets[1].pointColor = '#00a63a'
            var barChartOptions = {
                //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
                scaleBeginAtZero: true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: true,
                //String - Colour of the grid lines
                scaleGridLineColor: 'rgba(0,0,0,.05)',
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                //Boolean - If there is a stroke on each bar
                barShowStroke: true,
                //Number - Pixel width of the bar stroke
                barStrokeWidth: 2,
                //Number - Spacing between each of the X value sets
                barValueSpacing: 5,
                //Number - Spacing between data sets within X values
                barDatasetSpacing: 1,
                //String - A legend template
                legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                //Boolean - whether to make the chart responsive
                responsive: true,
                maintainAspectRatio: true
            }

            barChartOptions.datasetFill = false
            barChart.Bar(barChartData, barChartOptions)
        })
    </script>
}
